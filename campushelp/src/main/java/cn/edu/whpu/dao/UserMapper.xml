<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.edu.whpu.dao.UserMapper" >
  <select id="selectByPrimaryKey"  parameterType="java.lang.Integer" resultType="User">
    select *
    from user
    where stuId = #{stuId}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where stuid = #{stuId}
  </delete>
  <insert id="insert" parameterType="user">
    insert into user (studentId, password,schoolId, sex, name,registerTime, money, state)
    values (#{studentId}, #{password},#{schoolId}, #{sex}, #{name},
      #{registerTime}, #{money}, #{state} )
  </insert>
  <insert id="insertSelective" parameterType="user" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="stuId != null" >
        stuid
      </if>
      <if test="studentId != null" >
        studentId
      </if>
      <if test="password != null" >
        password
      </if>
      <if test="schoolId != null" >
        schoolid
      </if>
      <if test="sex != null" >
        sex
      </if>
      <if test="name != null" >
        name
      </if>
      <if test="registerTime != null" >
        registertime
      </if>
      <if test="money != null" >
        money
      </if>
      <if test="state != null" >
        state
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="stuId != null" >
        #{stuId}
      </if>
      <if test="studentId != null" >
        #{studentId}
      </if>
      <if test="password != null" >
        #{password}
      </if>
      <if test="schoolId != null" >
        #{schoolId}
      </if>
      <if test="sex != null" >
        #{sex}
      </if>
      <if test="name != null" >
        #{name}
      </if>
      <if test="registerTime != null" >
        #{registerTime}
      </if>
      <if test="money != null" >
        #{money}
      </if>
      <if test="state != null" >
        #{state}
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="user" >
    update user
    <set >
      <if test="studentId != null" >
        studentId = #{studentId},
      </if>
      <if test="password != null" >
        password = #{password},
      </if>
      <if test="schoolId != null" >
        schoolId = #{schoolId},
      </if>
      <if test="sex != null" >
        sex = #{sex},
      </if>
      <if test="name != null" >
        name = #{name},
      </if>
      <if test="registerTime != null" >
        registerTime = #{registerTime},
      </if>
      <if test="money != null" >
        money = #{money},
      </if>
      <if test="state != null" >
        state = #{state},
      </if>
    </set>
    where stuId = #{stuId}
  </update>
  <update id="updateByPrimaryKey" parameterType="user" >
    update user
    set studentId = #{studentId},
      password = #{password},
      schoolId = #{schoolId},
      sex = #{sex},
      name = #{name},
      registerTime = #{registerTime},
      money = #{money},
      state = #{state}
    where stuId = #{stuId}
  </update>
  
  <!-- 根据账号或昵称查找返回user -->
  <select id="selectByLikeNameAccount" resultType="user" >
    SELECT  *
    from `user` WHERE CONCAT(studentId,name) LIKE #{words}
  </select>
  
  <!-- 查找账号个数 -->
  <select id="selectAccountCount" resultType="java.lang.Integer" >
    SELECT COUNT(*) FROM `user` WHERE studentId = #{account};
  </select>
  
  <!-- 根据账号查找返回user -->
  <select id="selectUserByAccount" resultType="user" >
    SELECT * FROM `user` WHERE studentId = #{account};
  </select>
  
</mapper>